#include <catch2/catch_test_macros.hpp>
#include <catch2/matchers/catch_matchers_floating_point.hpp>

#include <votess.hpp>

///////////////////////////////////////////////////////////////////////////////
/// Forward Declarations                                                    ///
///////////////////////////////////////////////////////////////////////////////

template <typename T>
static void test_votess(
  std::vector<std::array<T,3>>& xyzset,
  const int k,
  const int gr
);

///////////////////////////////////////////////////////////////////////////////
/// Test Cases                                                              ///
///////////////////////////////////////////////////////////////////////////////

TEST_CASE("votess regression 0: lattice", "[votess]") {

  const int k = 5;
  std::vector<std::array<float, 3>> xyzset = {
    {0.1f, 0.1f, 0.1f},
    {0.1f, 0.1f, 0.5f},
    {0.1f, 0.1f, 0.9f},
    {0.1f, 0.5f, 0.1f},
    {0.1f, 0.5f, 0.5f},
    {0.1f, 0.5f, 0.9f},
    {0.1f, 0.9f, 0.1f},
    {0.1f, 0.9f, 0.5f},
    {0.1f, 0.9f, 0.9f},
    {0.5f, 0.1f, 0.1f},
    {0.5f, 0.1f, 0.5f},
    {0.5f, 0.1f, 0.9f},
    {0.5f, 0.5f, 0.1f},
    {0.5f, 0.5f, 0.5f},
    {0.5f, 0.5f, 0.9f},
    {0.5f, 0.9f, 0.1f},
    {0.5f, 0.9f, 0.5f},
    {0.5f, 0.9f, 0.9f},
    {0.9f, 0.1f, 0.1f},
    {0.9f, 0.1f, 0.5f},
    {0.9f, 0.1f, 0.9f},
    {0.9f, 0.5f, 0.1f},
    {0.9f, 0.5f, 0.5f},
    {0.9f, 0.5f, 0.9f},
    {0.9f, 0.9f, 0.1f},
    {0.9f, 0.9f, 0.5f},
    {0.9f, 0.9f, 0.9f},
  };

  for (const auto& gr : {1,2,3,4,6,8,16,24,32} ) {
    test_votess(xyzset, k, gr);
  }

}

TEST_CASE("votess regression 1: fibonacci_sphere(8)", "[votess]") {

  const int k = 1;
  std::vector<std::array<float, 3>> xyzset = {
    {0.4316481022186976f, 0.7707070026624881f, 0.999999f},
    {0.9053413416285837f, 0.33968357608471256f, 0.864734028131938f},
    {0.044980109438807536f, 0.38637570025332874f, 0.7294680562638759f},
    {0.805274685488643f, 0.9853709133015262f, 0.5942020843958139f},
    {0.6309764453554457f, 1e-06f, 0.45893611252775207f},
    {0.12229405637631838f, 0.8234593704415192f, 0.3236701406596901f},
    {0.9464668866512381f, 0.5721811378961699f, 0.18840416879162808f},
    {0.35365905282086707f, 0.3298067343985586f, 0.053138196923566104f},
  };

  for (const auto& gr : {1,2,3,4,6,8,16,24,32} ) {
    test_votess(xyzset, k, gr);
  }

}

TEST_CASE("votess regression 2: fibonacci_sphere(16)", "[votess]") {

  const int k = 3;
  std::vector<std::array<float, 3>> xyzset = {
    {0.42232846920859846f, 0.6538398609178998f, 0.9689910297385709f},
    {0.7558409552885069f, 0.3545650571398514f, 0.9047443695346677f},
    {0.1287773160387457f, 0.38281927111113023f, 0.8404977093307645f},
    {0.7077669421936427f, 0.8503327453603716f, 0.7762510491268613f},
    {0.577030369638933f, 0.03379249156548609f, 0.7120043889229579f},
    {0.09362400886600487f, 0.7761309429887806f, 0.6477577287190547f},
    {0.9890463520800347f, 0.5416613061981845f, 0.5835110685151514f},
    {0.1485256941901059f, 0.10181492077968715f, 0.5192644083112483f},
    {0.47654144455479525f, 0.999999f, 0.45501774810734513f},
    {0.835787045255067f, 0.12200090120608f, 0.39077108790344184f},
    {1e-06f, 0.5197661564602594f, 0.32652442769953866f},
    {0.8480339634604775f, 0.7758647369225042f, 0.26227776749563547f},
    {0.421784649372489f, 0.0672452623733734f, 0.1980311072917323f},
    {0.28034846129114116f, 0.7978570885167786f, 0.13378444708782902f},
    {0.7780403860780232f, 0.41535237445665435f, 0.06953778688392585f},
    {0.3301536542770608f, 0.4014433117907493f, 0.005291126680022573f},
  };

  for (const auto& gr : {1,2,3,4,6,8,16,24,32} ) {
    test_votess(xyzset, k, gr);
  }

}

TEST_CASE("votess regression 3: fibonacci_sphere(14)", "[votess]") {

  const int k = 2;
  std::vector<std::array<float, 3>> xyzset = {
    {0.41354092185864655f, 0.6637378507757136f, 0.9671692545989051f},
    {0.7724842980252475f, 0.3410420655036093f, 0.8927716196297586f},
    {0.10057058477674813f, 0.37208697804515517f, 0.818373984660612f},
    {0.7177402766290099f, 0.8690488657936231f, 0.7439763496914653f},
    {0.5781929652945794f, 0.0064359521607160585f, 0.6695787147223188f},
    {0.07358169547646697f, 0.7846813294690667f, 0.5951810797531722f},
    {0.999999f, 0.5396810369654954f, 0.5207834447840258f},
    {0.14068858358118042f, 0.0933873085731155f, 0.4463858098148793f},
    {0.47307347951633727f, 0.9921621965385439f, 0.37198817484573277f},
    {0.8195099926366852f, 0.13176685525276033f, 0.29759053987658607f},
    {0.03358101066526946f, 0.5137225151981173f, 0.22319290490743954f},
    {0.7950793128408256f, 0.7327884463679001f, 0.1487952699382932f},
    {0.4340386391087533f, 0.16526623838200147f, 0.07439763496914657f},
    {0.37649223981550556f, 0.6444961717695563f, 1e-06f},
  };

  for (const auto& gr : {1,2,3,4,6,8,16,24,32} ) {
    test_votess(xyzset, k, gr);
  }

}

TEST_CASE("votess regression 4: fibonacci_sphere(48)", "[votess]") {

  const int k = 9;
  std::vector<std::array<float, 3>> xyzset = {
    {0.4647312050059362f, 0.5971367098359049f, 0.9950532888331866f},
    {0.6590023587511581f, 0.42423469894483595f, 0.9740637316521756f},
    {0.28685949839462666f, 0.4392286258330981f, 0.9530741744711647f},
    {0.6377972026556539f, 0.7256778169768143f, 0.9320846172901536f},
    {0.5589145110230681f, 0.21374019532669578f, 0.9110950601091427f},
    {0.24314653433705388f, 0.6917468797480134f, 0.8901055029281317f},
    {0.8445165452915412f, 0.5390269457119132f, 0.8691159457471206f},
    {0.2603207597179673f, 0.2270097477125421f, 0.8481263885661096f},
    {0.49385154359121763f, 0.8863183564566018f, 0.8271368313850985f},
    {0.7790100735193353f, 0.2114726297916428f, 0.8061472742040876f},
    {0.08623101654187014f, 0.5296303205311287f, 0.7851577170230766f},
    {0.8375913682028504f, 0.7704415337594003f, 0.7641681598420657f},
    {0.4337967730118931f, 0.06490636400889277f, 0.7431786026610545f},
    {0.2508255272584958f, 0.8788981416733737f, 0.7221890454800436f},
    {0.9509288160021693f, 0.3909614798466538f, 0.7011994882990327f},
    {0.08829988758484365f, 0.27607409032182145f, 0.6802099311180215f},
    {0.6566268122545069f, 0.9545791046544451f, 0.6592203739370106f},
    {0.696046471683304f, 0.057481795112164f, 0.6382308167559996f},
    {0.053478427274332184f, 0.7004073099859707f, 0.6172412595749885f},
    {0.9707727422368346f, 0.6596131514491799f, 0.5962517023939776f},
    {0.2608784418069275f, 0.0655373248037284f, 0.5752621452129667f},
    {0.38413427261149974f, 0.9887945927838497f, 0.5542725880319557f},
    {0.9189785456753409f, 0.2212044346337837f, 0.5332830308509446f},
    {0.0037788113514934988f, 0.42676879989630334f, 0.5122934736699336f},
    {0.818341092028934f, 0.8935310025204122f, 0.4913039164889227f},
    {0.5329473123015358f, 1e-06f, 0.4703143593079116f},
    {0.1411343557991703f, 0.84955026598484f, 0.44932480212690057f},
    {0.999999f, 0.4890703249105315f, 0.42833524494588965f},
    {0.12851973582337986f, 0.17698355053841533f, 0.4073456877648786f},
    {0.5571288871496328f, 0.9890101628071515f, 0.38635613058386764f},
    {0.7869192636439261f, 0.10955391475274667f, 0.36536657340285666f},
    {0.03287561651440632f, 0.5971558738967699f, 0.34437701622184563f},
    {0.905617946936514f, 0.7444154150762259f, 0.3233874590408346f},
    {0.3703338171802892f, 0.05826770441519394f, 0.3023979018598237f},
    {0.3033519403247427f, 0.9089969380948758f, 0.28140834467881265f},
    {0.9131129906531862f, 0.33956515782591057f, 0.26041878749780156f},
    {0.10024148486517709f, 0.34792374252913527f, 0.23942923031679067f},
    {0.6879071319208762f, 0.8744040420040416f, 0.2184396731357797f},
    {0.6121146632445804f, 0.11583786845342725f, 0.19745011595476858f},
    {0.17407072685261063f, 0.7030768758251689f, 0.17646055877375771f},
    {0.8609708509066784f, 0.5711955346316768f, 0.15547100159274663f},
    {0.2963940324996772f, 0.22494062297448444f, 0.13448144441173565f},
    {0.4687002808688769f, 0.8209941651167343f, 0.1134918872307246f},
    {0.7214435466111141f, 0.30687292739766087f, 0.09250233004971369f},
    {0.239881997816612f, 0.4976636038538706f, 0.07151277286870254f},
    {0.6644593923528995f, 0.6556017165045823f, 0.05052321568769167f},
    {0.4892317268883774f, 0.3269523720449802f, 0.029533658506680632f},
    {0.43828750640972347f, 0.5819838856810333f, 0.008544101325669596f},
  };

  for (const auto& gr : {1,2,3,4,6,8,16,24,32} ) {
    test_votess(xyzset, k, gr);
  }

}

TEST_CASE("votess regression 5: fibonacci_sphere(64)", "[votess]") {

  const int k = 12;
  std::vector<std::array<float, 3>> xyzset = {
    {0.466121007585302f, 0.5815291511301941f, 0.9968600266459421f},
    {0.6358236284988967f, 0.4306402583801314f, 0.981036851619816f},
    {0.31004869291067966f, 0.44359109866843593f, 0.96521367659369f},
    {0.6179724709398651f, 0.6952193819542799f, 0.9493905015675639f},
    {0.5487870998468379f, 0.24445855977151504f, 0.9335673265414378f},
    {0.2696648266628299f, 0.6664298931490087f, 0.9177441515153117f},
    {0.8025443922245971f, 0.5314649028441476f, 0.9019209764891857f},
    {0.2834171107688617f, 0.25375685478075144f, 0.8860978014630596f},
    {0.4913285182343308f, 0.8420329370631965f, 0.8702746264369335f},
    {0.7470690385257251f, 0.2380280403940191f, 0.8544514514108075f},
    {0.12423898112359665f, 0.5234905394259821f, 0.8386282763846814f},
    {0.8020251364688313f, 0.7413139778022148f, 0.8228051013585553f},
    {0.4366851289261117f, 0.1017373073574847f, 0.8069819263324293f},
    {0.2695257983882215f, 0.8423697799696751f, 0.7911587513063032f},
    {0.9099990872767483f, 0.396862187189984f, 0.7753355762801771f},
    {0.11763276111013551f, 0.290556840074096f, 0.7595124012540511f},
    {0.6417582361939398f, 0.9175800529878743f, 0.743689226227925f},
    {0.6792402309614624f, 0.08484980773137832f, 0.7278660512017989f},
    {0.07869671984646326f, 0.6843744241247862f, 0.7120428761756729f},
    {0.9402005429578368f, 0.647090214025087f, 0.6962197011495468f},
    {0.2700058997234361f, 0.08479680710917081f, 0.6803965261234207f},
    {0.3860970925230969f, 0.963359602567379f, 0.6645733510972947f},
    {0.8996362154774288f, 0.2285795940878894f, 0.6487501760711686f},
    {0.015725335339952018f, 0.4257074522831086f, 0.6329270010450425f},
    {0.8078061835380119f, 0.881293864085196f, 0.6171038260189166f},
    {0.5291462661200368f, 0.003596632393373771f, 0.6012806509927905f},
    {0.1393510496374482f, 0.8446529694098389f, 0.5854574759666644f},
    {0.9995765323858908f, 0.4856263969123239f, 0.5696343009405384f},
    {0.11874737637423145f, 0.1680425978468616f, 0.5538111259144123f},
    {0.5553908312382815f, 0.999999f, 0.5379879508882862f},
    {0.795817221103537f, 0.08930982751825621f, 0.5221647758621601f},
    {0.002304373942076932f, 0.5993189298060014f, 0.5063416008360341f},
    {0.9324071033020008f, 0.7591657203014243f, 0.49051842580990807f},
    {0.3546938604714358f, 0.013498681949294926f, 0.4746952507837819f},
    {0.27728432283088883f, 0.952204814176386f, 0.4588720757576559f},
    {0.9666302007610145f, 0.31375913422095164f, 0.4430489007315298f},
    {0.030312153560093848f, 0.319049313321283f, 0.42722572570540374f},
    {0.7213169957553299f, 0.9446692210862463f, 0.41140255067927767f},
    {0.6346801743102641f, 0.02173361444938413f, 0.3955793756531516f},
    {0.07898267721030106f, 0.7560387770430551f, 0.37975620062702553f},
    {0.977717749442889f, 0.591034781212807f, 0.36393302560089946f},
    {0.2103353363446693f, 0.11011683751596717f, 0.34810985057477345f},
    {0.4490972517216175f, 0.9741867649126764f, 0.3322866755486473f},
    {0.8518426362040047f, 0.18479085290962335f, 0.31646350052252126f},
    {0.032375385383010685f, 0.4910720310989847f, 0.30064032549639524f},
    {0.8320014421314672f, 0.8138368354491401f, 0.2848171504702691f},
    {0.4660710748451961f, 0.04821470887380615f, 0.268993975444143f},
    {0.2233889320753758f, 0.8456794033132112f, 0.25317080041801715f},
    {0.9267785188126647f, 0.4296160518460407f, 0.23734762539189092f},
    {0.14438458193247222f, 0.26528422534457746f, 0.22152445036576496f},
    {0.5993734890923117f, 0.8990571684129471f, 0.2057012753396389f},
    {0.6890711710086805f, 0.1451121922161752f, 0.18987810031351277f},
    {0.13116541478748575f, 0.626020505373411f, 0.17405492528738664f},
    {0.8427845915074482f, 0.6469792746149199f, 0.15823175026126063f},
    {0.35099429293689866f, 0.1699589176184838f, 0.14240857523513464f},
    {0.3904095074315973f, 0.8246890679747872f, 0.12658540020900852f},
    {0.7827922722709039f, 0.33957911322543344f, 0.1107622251828825f},
    {0.2007357181079949f, 0.42803849411179956f, 0.09493905015675644f},
    {0.6579813542933908f, 0.7331656941296032f, 0.07911587513063031f},
    {0.5357526134402553f, 0.2422184622510162f, 0.06329270010450432f},
    {0.32004681239182015f, 0.6440180911485702f, 0.04746952507837819f},
    {0.6943110620999176f, 0.5096301548760601f, 0.03164635005225213f},
    {0.39155171674093503f, 0.38865986216135995f, 0.015823175026126065f},
    {0.5011419374966639f, 0.5875478231217802f, 1e-06f},
  };

  for (const auto& gr : {1,2,3,4,6,8,16,24,32} ) {
    test_votess(xyzset, k, gr);
  }

}

TEST_CASE("votess regression 6: fibonacci_sphere(96)", "[votess]") {

  const int k = 19;
  std::vector<std::array<float, 3>> xyzset = {
    {0.47566298658396566f, 0.5694543592378769f, 0.999999f},
    {0.6138780082371141f, 0.4466805510978399f, 0.9895141112508483f},
    {0.3479922591330512f, 0.4571109273998566f, 0.9790282225016967f},
    {0.5998753664809007f, 0.6631727727629526f, 0.968542333752545f},
    {0.5433035038019747f, 0.293207725651745f, 0.9580564450033933f},
    {0.3133610072054931f, 0.640393871125815f, 0.9475705562542417f},
    {0.7533555344398585f, 0.529232822994662f, 0.9370846675050899f},
    {0.32359063855589976f, 0.2989907057908062f, 0.9265987787559383f},
    {0.49601121706921725f, 0.7878280814844141f, 0.9161128900067866f},
    {0.7095027713849367f, 0.2845172073709185f, 0.9056270012576348f},
    {0.1884393337605312f, 0.5229149017916269f, 0.8951411125084833f},
    {0.7571640290199182f, 0.7061218933071267f, 0.8846552237593316f},
    {0.44981854543999733f, 0.167181949061481f, 0.8741693350101798f},
    {0.3080341783275901f, 0.7932436316190695f, 0.8636834462610282f},
    {0.851890070665986f, 0.4155540517432532f, 0.8531975575118765f},
    {0.17680866563854547f, 0.32444530668770244f, 0.8427116687627247f},
    {0.6247999693954414f, 0.8612704793856634f, 0.8322257800135732f},
    {0.6576039091488813f, 0.14581394061731132f, 0.8217398912644215f},
    {0.13890059097621976f, 0.6627402242558846f, 0.8112540025152698f},
    {0.8857680940017063f, 0.6310889106234476f, 0.8007681137661181f},
    {0.30249399470472565f, 0.1407966958570291f, 0.7902822250169664f},
    {0.4033599118905121f, 0.9098473033820677f, 0.7797963362678147f},
    {0.8557537229949882f, 0.2639326829590206f, 0.7693104475186631f},
    {0.07392930756638277f, 0.43744069397821994f, 0.7588245587695114f},
    {0.7777575543584008f, 0.8432785709334545f, 0.7483386700203597f},
    {0.5294653645814873f, 0.058173931737936994f, 0.737852781271208f},
    {0.17797001514417227f, 0.8142722492895522f, 0.7273668925220563f},
    {0.95688234827427f, 0.4902966184304672f, 0.7168810037729046f},
    {0.1549677528310787f, 0.20001353638963193f, 0.706395115023753f},
    {0.5543272610178138f, 0.9633913011305115f, 0.6959092262746013f},
    {0.7774904159007452f, 0.12281418823530856f, 0.6854233375254497f},
    {0.03874917502182302f, 0.5961077798071128f, 0.6749374487762979f},
    {0.9102490753987383f, 0.74724635912092f, 0.6644515600271463f},
    {0.365566335692931f, 0.04189474052661445f, 0.6539656712779947f},
    {0.29031980651255734f, 0.9361090063711506f, 0.6434797825288427f},
    {0.9539827550848946f, 0.3236145594124983f, 0.6329938937796913f},
    {0.04561136239858785f, 0.3270647172941542f, 0.6225080050305395f},
    {0.7213782325326727f, 0.9412942659575877f, 0.6120221162813879f},
    {0.6375055418175022f, 0.02755017376266852f, 0.6015362275322361f},
    {0.07980581823824873f, 0.7611670990166469f, 0.5910503387830844f},
    {0.9900334150356326f, 0.5962302359508964f, 0.5805644500339329f},
    {0.2047852647091755f, 0.10142193312416692f, 0.5700785612847812f},
    {0.4503493854061514f, 0.9992612520143578f, 0.5595926725356295f},
    {0.8767175313164718f, 0.1693031501289247f, 0.5491067837864778f},
    {1e-06f, 0.493996061997614f, 0.5386208950373261f},
    {0.867145104465746f, 0.8472568147805739f, 0.5281350062881743f},
    {0.4658549922175663f, 0.00013786290598804125f, 0.5176491175390228f},
    {0.18942887877859707f, 0.8964520739658604f, 0.5071632287898711f},
    {0.9988441162177795f, 0.4220897329358819f, 0.49667734004071934f},
    {0.08176185241489818f, 0.22523780239661137f, 0.48619145129156766f},
    {0.6247288566860834f, 0.9893262168396183f, 0.47570556254241614f},
    {0.7402912080859881f, 0.06014424618230498f, 0.46521967379326423f},
    {0.028565915633973843f, 0.6663671629542807f, 0.45473378504411266f},
    {0.9610308533091815f, 0.6999735126316393f, 0.44424789629496103f},
    {0.2977104864929825f, 0.046962585551767536f, 0.4337620075458093f},
    {0.34566458421596236f, 0.9738662044080949f, 0.42327611879665755f},
    {0.9343858024633958f, 0.2603357047412841f, 0.41279023004750603f},
    {0.021793634724295494f, 0.38839159129367046f, 0.4023043412983543f},
    {0.7780075411145322f, 0.9081063419511318f, 0.39181845254920256f},
    {0.5723609872806942f, 0.018360144365338265f, 0.3813325638000509f},
    {0.12543698079078563f, 0.809188458895912f, 0.3708466750508992f},
    {0.9841384621490739f, 0.529492690647616f, 0.36036078630174756f},
    {0.1672031759247053f, 0.1581465832019005f, 0.3498748975525958f},
    {0.5164095320300246f, 0.9780582331024684f, 0.33938900880344414f},
    {0.8104428090571076f, 0.14385239608459657f, 0.3289031200542925f},
    {0.03649783038781051f, 0.557077050226675f, 0.3184172313051409f},
    {0.8789227242407186f, 0.7731603088041572f, 0.3079313425559891f},
    {0.4080727785920897f, 0.05167991602648501f, 0.29744545380683746f},
    {0.26944279151414924f, 0.8931744274683016f, 0.28695956505768583f},
    {0.9327456630428417f, 0.3719317462587584f, 0.2764736763085341f},
    {0.1013099041178621f, 0.30909684145836047f, 0.2659877875593823f},
    {0.6649409993380692f, 0.9093953459470988f, 0.2555018988102308f},
    {0.6548204525793435f, 0.09700617942211888f, 0.24501601006107915f},
    {0.12137089820822573f, 0.6943218575935377f, 0.23453012131192733f},
    {0.9059844700539882f, 0.6152813611545424f, 0.2240442325627758f},
    {0.2843137664984953f, 0.15145132059531685f, 0.21355834381362393f},
    {0.42703089124169424f, 0.8999344219919356f, 0.20307245506447227f},
    {0.8196335049976334f, 0.26379288082190433f, 0.19258656631532065f},
    {0.11515169504523601f, 0.46372110405693534f, 0.18210067756616893f},
    {0.7553873124173768f, 0.7847390343627724f, 0.1716147888170173f},
    {0.5059605844613245f, 0.1315439779935882f, 0.1611289000678656f},
    {0.255542058712564f, 0.7650471498887575f, 0.1506430113187139f},
    {0.8508377873900225f, 0.47513053119237797f, 0.1401571225695622f},
    {0.2353374085397533f, 0.29287982266298723f, 0.12967123382041068f},
    {0.5553416790508683f, 0.8244010138069796f, 0.11918534507125886f},
    {0.6734328254658303f, 0.2386817449789473f, 0.10869945632210722f},
    {0.21080167699269317f, 0.5767837816431798f, 0.09821356757295552f},
    {0.754250068554636f, 0.6364857537527538f, 0.08772767882380382f},
    {0.4120213706774325f, 0.24716537910079017f, 0.07724179007465223f},
    {0.4028748695260138f, 0.7346339829978543f, 0.06675590132550054f},
    {0.7148798659794234f, 0.40508149126714477f, 0.05627001257634884f},
    {0.2996040385224959f, 0.4360291645258988f, 0.04578412382719714f},
    {0.5947361683607999f, 0.666184628654103f, 0.0352982350780455f},
    {0.5380494818539231f, 0.3457268257306602f, 0.02481234632889374f},
    {0.39901317736207936f, 0.5726032907059464f, 0.014326457579742099f},
    {0.5736725492399093f, 0.5120153051722678f, 0.0038405688305904557f},
  };

  for (const auto& gr : {1,2,3,4,6,8,16,24,32} ) {
    test_votess(xyzset, k, gr);
  }

}

TEST_CASE("votess regression 7: fibonacci_sphere(128)", "[votess]") {

  const int k = 25;
  std::vector<std::array<float, 3>> xyzset = {
    {0.47561963165782944f, 0.5566745978211572f, 0.9963261774423666f},
    {0.5951941327957972f, 0.45050951648089155f, 0.9884834237465653f},
    {0.36492936058337355f, 0.4594830424820098f, 0.9806406700507639f},
    {0.5833084185693205f, 0.6382325318397801f, 0.9727979163549627f},
    {0.5342705603379664f, 0.31695410000045643f, 0.9649551626591614f},
    {0.3342315661663171f, 0.6188077051328434f, 0.95711240896336f},
    {0.7174232936855227f, 0.5221126912541878f, 0.9492696552675587f},
    {0.34267578180727853f, 0.32120641981858306f, 0.9414269015717573f},
    {0.49314641444321994f, 0.748213043801219f, 0.933584147875956f},
    {0.6800323363829199f, 0.30799319801191444f, 0.9257413941801548f},
    {0.22345206503841733f, 0.5167193416952371f, 0.9178986404843534f},
    {0.7224686998801305f, 0.6776430312355386f, 0.9100558867885521f},
    {0.45247989878742306f, 0.20385794259012888f, 0.9022131330927508f},
    {0.3274728026480414f, 0.7550045334705235f, 0.8943703793969494f},
    {0.807207833060834f, 0.42208122773334683f, 0.8865276257011481f},
    {0.2108534883563413f, 0.34139114350372657f, 0.8786848720053468f},
    {0.6071535121300421f, 0.8166101787510367f, 0.8708421183095455f},
    {0.6364618541809183f, 0.1823096669550977f, 0.8629993646137442f},
    {0.17557359939354206f, 0.6412860967857573f, 0.8551566109179428f},
    {0.8402171810621116f, 0.613366059644739f, 0.8473138572221415f},
    {0.3203291483612275f, 0.17601900712339016f, 0.8394711035263401f},
    {0.4101734917321863f, 0.8631009356176452f, 0.8316283498305389f},
    {0.8153737330133655f, 0.2850558266408673f, 0.8237855961347376f},
    {0.11399653913937154f, 0.4404118271978635f, 0.8159428424389362f},
    {0.746529408148548f, 0.8054899018410696f, 0.8081000887431349f},
    {0.5231526420986538f, 0.098121991574558f, 0.8002573350473335f},
    {0.20550375178264396f, 0.7806355731718201f, 0.7924145813515322f},
    {0.9104812063187941f, 0.4877809340320702f, 0.784571827655731f},
    {0.1832514800020604f, 0.2241565490464877f, 0.7767290739599296f},
    {0.5460158595337401f, 0.9183749203914774f, 0.7688863202641283f},
    {0.7497760774975379f, 0.15236735468345056f, 0.761043566568327f},
    {0.07458192384413642f, 0.5844781997758572f, 0.7532008128725256f},
    {0.8728426507645556f, 0.7233317028247226f, 0.7453580591767243f},
    {0.37290860099890377f, 0.0752326058975809f, 0.737515305480923f},
    {0.3031704543922031f, 0.8987261131618994f, 0.7296725517851217f},
    {0.9163870543973646f, 0.33341088438089694f, 0.7218297980893204f},
    {0.07508335398035182f, 0.3361322279858297f, 0.713987044393519f},
    {0.7024667786551175f, 0.907048383228856f, 0.7061442906977177f},
    {0.624829631694812f, 0.055663586499476565f, 0.6983015370019163f},
    {0.10318043221427699f, 0.7409858329344744f, 0.6904587833061151f},
    {0.9567078842210198f, 0.586879633698729f, 0.6826160296103138f},
    {0.2183313412313591f, 0.12093567518159376f, 0.6747732759145124f},
    {0.44955013863602944f, 0.9685558252666168f, 0.6669305222187111f},
    {0.8539495355539386f, 0.1826970334393852f, 0.6590877685229097f},
    {0.02030052656145182f, 0.49076457389324385f, 0.6512450148271084f},
    {0.8474555719566521f, 0.8284429482569884f, 0.6434022611313072f},
    {0.4636991348249867f, 0.016746247632161163f, 0.6355595074355058f},
    {0.19719902980940493f, 0.8784765564744649f, 0.6277167537397045f},
    {0.9791395008131385f, 0.42106652376142967f, 0.6198740000439031f},
    {0.09000625409631184f, 0.22943450884401193f, 0.6120312463481018f},
    {0.6181886765401369f, 0.9740837720177952f, 0.6041884926523005f},
    {0.7320697693110797f, 0.0650836361276912f, 0.5963457389564992f},
    {0.03188981116541574f, 0.660349667674788f, 0.5885029852606979f},
    {0.9529478099518316f, 0.6944344981960677f, 0.5806602315648965f},
    {0.2950477580102335f, 0.045461736852582035f, 0.5728174778690952f},
    {0.3419459065227408f, 0.9705886027911458f, 0.5649747241732939f},
    {0.9334916794822683f, 0.2552101677671565f, 0.5571319704774925f},
    {0.012370548919559965f, 0.3834078429021664f, 0.5492892167816913f},
    {0.779427897489948f, 0.9118966334813619f, 0.54144646308589f},
    {0.5704861635468982f, 0.002846662842371051f, 0.5336037093900886f},
    {0.11002976207260175f, 0.8152086772212765f, 0.5257609556942873f},
    {0.9990465882013716f, 0.5269424995123813f, 0.5179182019984859f},
    {0.1482537362720472f, 0.13878206940878512f, 0.5100754483026846f},
    {0.5135780940420747f, 0.999999f, 0.5022326946068834f},
    {0.8259399076538982f, 0.11806913778643457f, 0.49438994091108207f},
    {1e-06f, 0.5573657110675811f, 0.4865471872152807f},
    {0.9054421950671754f, 0.7912276955460054f, 0.47870443351947933f},
    {0.3960429504546641f, 0.007671241970916422f, 0.47086167982367805f},
    {0.2425491055337305f, 0.928753094813431f, 0.46301892612787676f},
    {0.9770732430488941f, 0.35385937532305123f, 0.4551761724320753f},
    {0.048376749931375626f, 0.2817469531275763f, 0.4473334187362741f},
    {0.6834713746140265f, 0.9611243142299062f, 0.4394906650404727f},
    {0.6740566721588249f, 0.032898010906563684f, 0.4316479113446714f},
    {0.05533414373840665f, 0.7222756920366349f, 0.4238051576488701f},
    {0.975040074424876f, 0.6320585962582753f, 0.41596240395306877f},
    {0.23785316801980735f, 0.07882710960461711f, 0.40811965025726743f},
    {0.40728437625810515f, 0.9820915713087255f, 0.40027689656146614f},
    {0.8909186825546607f, 0.20405043607745005f, 0.3924341428656648f},
    {0.011794226049221828f, 0.450260481562809f, 0.3845913891698635f},
    {0.8233340225583087f, 0.8609719596596656f, 0.3767486354740621f},
    {0.5036013449522718f, 0.013371904745229635f, 0.36890588177826084f},
    {0.16831573314999218f, 0.8507397986061999f, 0.3610631280824595f},
    {0.9774099160290424f, 0.46152630953304064f, 0.35322037438665826f},
    {0.1221097698826318f, 0.2033135801071455f, 0.34537762069085687f},
    {0.5760208438264881f, 0.9674084803823648f, 0.3375348669950555f},
    {0.7563940971333103f, 0.10220422564754353f, 0.32969211329925424f},
    {0.04322315300783589f, 0.6153409087628776f, 0.3218493596034529f},
    {0.9102664286451563f, 0.7180037057640017f, 0.3140066059076515f},
    {0.3440042954854612f, 0.06103717045081819f, 0.3061638522118503f},
    {0.31802142005227424f, 0.9219142574740625f, 0.29832109851604893f},
    {0.9142169524858814f, 0.3091871683093362f, 0.2904783448202476f},
    {0.0673539960799822f, 0.35795550785031904f, 0.2826355911244462f},
    {0.7193996327678581f, 0.8895905421762041f, 0.274792837428645f},
    {0.598694552896263f, 0.06433531492418845f, 0.2669500837328436f},
    {0.1345759985303911f, 0.7481473746979004f, 0.25910733003704234f},
    {0.9309801610761245f, 0.559184670883908f, 0.25126457634124105f},
    {0.22327441909842802f, 0.164655754042241f, 0.24342182264543968f},
    {0.47598032159422826f, 0.9254097579212761f, 0.2355790689496383f},
    {0.7997713836401421f, 0.20191465407759582f, 0.22773631525383697f},
    {0.08093105315033797f, 0.5130508323519926f, 0.21989356155803572f},
    {0.8119715336746446f, 0.7659158299940789f, 0.21205080786223443f},
    {0.44847320477364094f, 0.09462899416596067f, 0.20420805416643295f},
    {0.2657339959611989f, 0.8249248165190043f, 0.1963653004706317f},
    {0.8845356798195393f, 0.41583923117064564f, 0.18852254677483035f},
    {0.16322661941419156f, 0.30141427611574684f, 0.1806797930790291f},
    {0.6104695279921848f, 0.8635879465436014f, 0.17283703938322778f},
    {0.6594215948525015f, 0.1593670446268814f, 0.1649942856874265f},
    {0.15715308592942012f, 0.6367347513722509f, 0.15715153199162507f},
    {0.8364147604047526f, 0.6241019178153243f, 0.1493087782958238f},
    {0.33750795848615245f, 0.18407621160427795f, 0.14146602460002242f},
    {0.4067721758692846f, 0.8308217680106202f, 0.13362327090422116f},
    {0.7832289119186867f, 0.3194740936623404f, 0.1257805172084198f},
    {0.17616794400146402f, 0.439323255260697f, 0.11793776351261852f},
    {0.6903683927415726f, 0.7519688895759409f, 0.11009500981681719f},
    {0.527120359573885f, 0.19131417714143523f, 0.10225225612101592f},
    {0.2773664570503916f, 0.6982780090846574f, 0.0944095024252145f},
    {0.785371240382763f, 0.5000422831176917f, 0.08656674872941317f},
    {0.29631037643122654f, 0.3110091985663644f, 0.07872399503361195f},
    {0.5197356126441267f, 0.7605793388794674f, 0.07088124133781053f},
    {0.6515870578443651f, 0.30086741077163476f, 0.06303848764200931f},
    {0.26589977110299345f, 0.5379779020135469f, 0.05519573394620788f},
    {0.6835590704959832f, 0.617725862436681f, 0.047352980250406615f},
    {0.4466495477070829f, 0.30140371057234555f, 0.03951022655460529f},
    {0.4121073985815029f, 0.6618729021191564f, 0.03166747285880397f},
    {0.652427723681444f, 0.44307920100115633f, 0.023824719163002644f},
    {0.37022446318044255f, 0.44453270541953765f, 0.015981965467201268f},
    {0.5435101373988096f, 0.5964355184337101f, 0.0081392117714f},
    {0.517412222685281f, 0.4386762566897962f, 0.00029645807559867737f},
  };

  for (const auto& gr : {1,2,3,4,6,8,16,24,32} ) {
    test_votess(xyzset, k, gr);
  }

}

TEST_CASE("votess regression 8: standard", "[votess]") {

  const int k = 2;
  std::vector<std::array<float, 3>> xyzset = {
    {0.605223f, 0.108484f, 0.090937f},
    {0.500792f, 0.499641f, 0.464576f},
    {0.437936f, 0.786332f, 0.160392f},
    {0.663354f, 0.170894f, 0.810284f},
    {0.614869f, 0.096867f, 0.204147f},
    {0.556911f, 0.895342f, 0.802266f},
    {0.305748f, 0.124146f, 0.516249f},
    {0.406888f, 0.157835f, 0.919622f},
    {0.094412f, 0.861991f, 0.798644f},
    {0.511958f, 0.560537f, 0.345479f},
  };

  for (const auto& gr : {1,2,3,4,6,8,16,24,32} ) {
    test_votess(xyzset, k, gr);
  }

}

TEST_CASE("votess regression 9: random", "[votess]") {

  const int k = 25;
  std::vector<std::array<float, 3>> xyzset = {
    {0.11423053333011846f, 0.04306721701219718f, 0.5088015691323988f},
    {0.8661077251690185f, 0.41904177932637987f, 0.4755888393745944f},
    {0.548892504084055f, 0.8129287149013524f, 0.5644439409302384f},
    {0.7829295309617957f, 0.5079794264370132f, 0.9666404106074018f},
    {0.1735759141918758f, 0.15563004479230536f, 0.5984859746837182f},
    {0.1741135920288741f, 0.9831718769640165f, 0.7666982331211959f},
    {0.6458524807354309f, 0.34025813786920733f, 0.5062554823130486f},
    {0.8796010388507907f, 0.5952749232873314f, 0.3018627117308237f},
    {0.6000703415737101f, 0.6072377293924586f, 0.13518462669214326f},
    {0.02634310397660644f, 0.9365782881084688f, 0.15498228264059033f},
    {0.12139238680169817f, 0.5930718297729334f, 0.14567961097312143f},
    {0.08182975113568836f, 0.5078011238305528f, 0.5585087662564997f},
    {0.19622150494559898f, 0.013801741136307832f, 0.5649374121200175f},
    {0.9901148949198073f, 0.008669679163395227f, 0.8573852728321644f},
    {0.5515815779204585f, 0.7658121332641441f, 0.8703828478244953f},
    {0.5282201867938927f, 0.18823324178056045f, 0.09288334142378607f},
    {0.4252243700631031f, 0.4415443518421174f, 0.673674299890298f},
    {0.5317434996326429f, 0.4542603416142681f, 0.40977767354027517f},
    {0.004104381005200497f, 0.8851011693671067f, 0.48495141598942637f},
    {0.1772507565523932f, 0.9675490141353279f, 0.14328144657091213f},
    {0.27508778262145317f, 0.6534116784532532f, 0.4402810804119959f},
    {0.02187115405398321f, 0.8004874879612931f, 0.298653817366343f},
    {0.882793479609641f, 0.09710726708977424f, 0.7128072147862761f},
    {0.43920704634117214f, 0.9424534692229635f, 0.07230674851195029f},
    {0.5946458604893711f, 0.7043204553583534f, 0.45220967890653263f},
    {0.5860148291939082f, 0.6239272865575755f, 0.5811152372802911f},
    {0.6868828977691988f, 0.438330716842388f, 0.41050720303875454f},
    {0.6722483187535397f, 0.14330543469524504f, 0.05574261801865965f},
    {0.8752235618309623f, 0.31279808485919125f, 0.34505798380877106f},
    {0.9376270858804007f, 0.07494321876652454f, 0.45668200319155294f},
    {0.5804565978665872f, 0.8448308232832156f, 0.4045055993625538f},
    {0.25598863735825883f, 0.9949802977913488f, 0.3184954464548371f},
    {0.46155936874763803f, 0.05358470394690473f, 0.960891919541312f},
    {0.26334808775724095f, 0.24348490643240017f, 0.8169148751434934f},
    {0.14949169609709245f, 0.3003703076500156f, 0.49404559491339617f},
    {0.05767161050075442f, 0.3063895343017432f, 0.38072926101895155f},
    {0.386940124711477f, 0.1251468408967117f, 0.9282905175300572f},
    {0.28083924745783706f, 0.0941357903048492f, 0.05710762892179766f},
    {0.2921731390508885f, 0.6945142581436263f, 0.8229461631549564f},
    {0.4913467292608169f, 0.05753813180883549f, 0.9441725227019172f},
    {0.14402715316224668f, 0.2923766111357664f, 0.5058051882146959f},
    {0.15384024461150958f, 0.13813844032176859f, 0.9703133826396426f},
    {0.05446133657850083f, 0.26191189424331285f, 0.2840235060299663f},
    {0.7250103815251727f, 0.7136685491481497f, 0.35386053521726646f},
    {0.8391546540683578f, 0.10655552660096457f, 0.36103969163666805f},
    {0.9657300999619631f, 0.43433982498698576f, 0.06977114955104202f},
    {0.06352121940564126f, 0.34398372979251046f, 0.3205773737898763f},
    {0.31238921246758955f, 0.218515131506684f, 0.4229099980053478f},
    {0.3050500764728806f, 0.5919416805301438f, 0.2712214679887346f},
    {0.9001058343528086f, 0.44580672744955374f, 0.8237562418392307f},
    {0.5892984042866647f, 0.10897827962622164f, 0.6398277133673989f},
    {0.9200274292319318f, 0.4520360396904811f, 0.943221087281861f},
    {0.28687206403026055f, 0.4626040981318238f, 0.6909210389391945f},
    {0.5880252242534146f, 0.5564030138164179f, 0.5799572072840845f},
    {0.4210529522668257f, 0.33020050186445393f, 0.4506479364193141f},
    {0.6841344918645329f, 0.08628557556136296f, 0.38812754497220747f},
    {0.2785526157982071f, 0.5049967694005114f, 0.34109813462938243f},
    {0.9158722149531338f, 0.44758704749194245f, 0.8016219096624734f},
    {0.9003915792715077f, 0.7706138719092134f, 0.5526199671084627f},
    {0.09895665639657825f, 0.13401744837071794f, 0.025287143676642754f},
    {0.3192937086135744f, 0.9045047049896207f, 0.7138918884686075f},
    {0.1660628396946583f, 0.711475793727246f, 0.8354098352597059f},
    {0.2833155369522833f, 0.7592612610127885f, 0.84643528920936f},
    {0.7624909906709655f, 0.17810820788451442f, 0.11023289499080025f},
    {0.442296341879972f, 0.3119561512463388f, 0.8426865795999472f},
    {0.5876455331468459f, 0.5867121303208208f, 0.908107406152057f},
    {0.9768215211211734f, 0.6256793025007776f, 0.19451452267818603f},
    {0.9754552678616463f, 0.6905379228130372f, 0.7891574690333075f},
    {0.19426370827720607f, 0.17255849393893774f, 0.25759723966941206f},
    {0.8583109685589057f, 0.6266072760493374f, 0.8152778616031348f},
    {0.7121532063552336f, 0.8010189469485473f, 0.25414791524450253f},
    {0.3325227685667942f, 0.4206222006980622f, 0.35749481101344804f},
    {0.1400550797464487f, 0.4203791146664384f, 0.4042851468864156f},
    {0.5599067376158716f, 0.5407922737245919f, 0.015660441003554015f},
    {0.059507040385717525f, 0.3755169331362401f, 0.7865040150314218f},
    {0.6652257020919591f, 0.10446818178470318f, 0.23839527085693646f},
    {0.13476135697530245f, 0.6637346008302948f, 0.002398543675238285f},
    {0.8532268067250713f, 0.8447055348827656f, 0.9163885972802215f},
    {0.47508936662255674f, 0.15887142499058537f, 0.39270470141349134f},
    {0.7604523314956291f, 0.3461022739450179f, 0.19684688854238552f},
    {0.1304968147764518f, 0.9270179208871218f, 0.877472422729805f},
    {0.542106093179714f, 0.4679099250223119f, 0.9998726515106034f},
    {0.9951952194759142f, 0.8711904814092785f, 0.37267708292505175f},
    {0.4286657114113833f, 0.8041077553064169f, 0.9848360652288923f},
    {0.3699800256404159f, 0.8575141284436889f, 0.6126407832852433f},
    {0.4804703930270736f, 0.003767770901350609f, 0.2669039499294732f},
    {0.5572780246272242f, 0.07838044510434594f, 0.3355732270728409f},
    {0.5557731598700715f, 0.7562454941888628f, 0.0018897400549029442f},
    {0.15951809200538192f, 0.3454733275680296f, 0.6930924074357f},
    {0.11415369769225836f, 0.8241097852594481f, 0.6578267108993625f},
    {0.8471785252146079f, 0.09444680621416701f, 0.04023625107312345f},
    {0.7115946175581063f, 0.2714577390055204f, 0.16295476530669584f},
    {0.19145750418159047f, 0.9309407775862106f, 0.36081415765920455f},
    {0.5293515219194905f, 0.6268434964109465f, 0.3847355802278528f},
    {0.5880178010596714f, 0.7208337191611668f, 0.12400522987891582f},
    {0.33875554293159316f, 0.574591711279706f, 0.1372271203527502f},
    {0.6857045872711497f, 0.6624819859919081f, 0.28476281177216956f},
    {0.714336211653514f, 0.8890988415668994f, 0.13507830063716653f},
    {0.4201437371708969f, 0.5208480891961834f, 0.6794416863048265f},
    {0.274519837156484f, 0.7750603618801793f, 0.9823832706318197f},
    {0.7776604319199472f, 0.10455898505423389f, 0.9190110623802735f},
    {0.4765224552092612f, 0.27430064185504766f, 0.7647066460138155f},
    {0.9098543767288928f, 0.23968747855911443f, 0.4454490086257753f},
    {0.7421857009277153f, 0.4431828152376336f, 0.873753714426751f},
    {0.9022469362638192f, 0.8968112866148915f, 0.519520192966132f},
    {0.8542567747379042f, 0.054165136339617836f, 0.07100174823145111f},
    {0.19899387183453499f, 0.22673532036799093f, 0.813411419504838f},
    {0.04825057603332228f, 0.047266257132751566f, 0.2267479535392618f},
    {0.1464619058934178f, 0.8550112273370584f, 0.9900315477889922f},
    {0.2835895592045583f, 0.8409191580285633f, 0.6735233099663326f},
    {0.6015521083725117f, 0.5579520049914766f, 0.01142125455250298f},
    {0.33735252932276594f, 0.1086332571928802f, 0.9230452364228775f},
    {0.9094345672025311f, 0.4699192484286516f, 0.4374292809388979f},
    {0.9264215085576992f, 0.8412551158484066f, 0.047775882375142964f},
    {0.23092759981967792f, 0.012246127899721126f, 0.32795804459356526f},
    {0.9597502889238746f, 0.6686838074112706f, 0.7679761954918205f},
    {0.6834105763047441f, 0.645510892917709f, 0.8816592381861961f},
    {0.7363073574880894f, 0.3749384440378587f, 0.2804020237283351f},
    {0.706899345042308f, 0.07410198556310876f, 0.4841937394413036f},
    {0.09622351389979666f, 0.3783346177092296f, 0.4618832536144948f},
    {0.1079827022821116f, 0.6465465579086761f, 0.958307275413812f},
    {0.5943151164392705f, 0.37453701555290486f, 0.19020582147148157f},
    {0.02247216478126024f, 0.26912353006020673f, 0.24773546679212977f},
    {0.04334223472529197f, 0.007811410817766262f, 0.87607745911011f},
    {0.4806167659145141f, 0.05582331583251965f, 0.7784725730467204f},
    {0.8267712667157038f, 0.8301111040304218f, 0.046541765287379744f},
    {0.5743662233477789f, 0.8538418368959176f, 0.10191689216758437f},
    {0.02169048120969519f, 0.43230052873050995f, 0.19715686275130861f},
  };

  for (const auto& gr : {1,2,3,4,6,8,16,24,32} ) {
    test_votess(xyzset, k, gr);
  }

}

TEST_CASE("votess regression 10: random", "[votess]") {

  const int k = 25;
  std::vector<std::array<float, 3>> xyzset = {
    {0.040952787931802126f, 0.6870155662843781f, 0.17994503062854206f},
    {0.12064727070549319f, 0.2103520387712008f, 0.25979481575112084f},
    {0.30414237014513723f, 0.16601800637785935f, 0.91868982639463f},
    {0.6600224591675949f, 0.14093793787554454f, 0.11631692240540525f},
    {0.14675924890470937f, 0.39437906704392023f, 0.8332361202546512f},
    {0.18927475848725672f, 0.3143201878530897f, 0.3820671500596893f},
    {0.8534228478482038f, 0.2017793205538747f, 0.6217518758989434f},
    {0.44734212235783355f, 0.4423350858144014f, 0.5004941387544679f},
    {0.7738620871297369f, 0.47600175656763066f, 0.11744056248654988f},
    {0.4308646870345414f, 0.7895663945018195f, 0.16947040915190015f},
    {0.5881930365740055f, 0.7181795879445991f, 0.14009277347297122f},
    {0.8804528738337118f, 0.45579335775936647f, 0.6455617098094698f},
    {0.050428987527463276f, 0.4676883084744917f, 0.16618764862777413f},
    {0.8183881054924199f, 0.4232829644241993f, 0.27614994106739366f},
    {0.39118736540399834f, 0.8413662725537814f, 0.3852882797121624f},
    {0.1942384122519638f, 0.6351352609826436f, 0.4852495314272941f},
    {0.7738112872172438f, 0.5961628740886203f, 0.4601226871253522f},
    {0.008908227924397827f, 0.06346315789227353f, 0.5204244191955976f},
    {0.5735692334333896f, 0.9421923569231264f, 0.6321265494113947f},
    {0.39426839179327544f, 0.2881962342608513f, 0.7948466042638983f},
    {0.06200269148712567f, 0.5097453987606622f, 0.7274991595254223f},
    {0.9411300464879552f, 0.05256231548112289f, 0.6312363441261915f},
    {0.1842754644698379f, 0.5787212008936813f, 0.9341283382701039f},
    {0.2436499863279209f, 0.804961503241056f, 0.4979413497283278f},
    {0.704526702284179f, 0.033589491689856366f, 0.4025789144507097f},
    {0.7814880748254034f, 0.9032433509705473f, 0.3051373795562683f},
    {0.00638944366085048f, 0.5819979722988148f, 0.02844607945168154f},
    {0.05520334631691182f, 0.0077363899979044914f, 0.7021073362166833f},
    {0.09681505261964418f, 0.4715693519869164f, 0.034660445321853306f},
    {0.5574923206497283f, 0.45693143955098625f, 0.4186916935832511f},
    {0.24223006190005314f, 0.41869639817818627f, 0.6924388064753532f},
    {0.023383650930309252f, 0.9795910797114211f, 0.8534283700590658f},
    {0.9607071675746336f, 0.7533968401762963f, 0.5356852621651348f},
    {0.44182161043663937f, 0.24838836750725024f, 0.11550615383623941f},
    {0.2213951875681719f, 0.5773763628869544f, 0.9557918130454296f},
    {0.3986789719366376f, 0.7811470617461636f, 0.3640959043674894f},
    {0.25503858175091254f, 0.6741541855631545f, 0.27168636206431107f},
    {0.6660411099036758f, 0.5629415690800227f, 0.7228596116281016f},
    {0.21593337792783052f, 0.09200157676363507f, 0.7835335240430097f},
    {0.9564301488539142f, 0.47420403720027204f, 0.18994215708552553f},
    {0.03072793956379205f, 0.9068209359306839f, 0.0739472644129f},
    {0.6555661687269119f, 0.009959170493643699f, 0.08874354644446836f},
    {0.9319663394701722f, 0.7770395251726339f, 0.36255284868316184f},
    {0.4713621630576509f, 0.7571587488560826f, 0.0717519998402879f},
    {0.646839736379026f, 0.9976783408082833f, 0.09913809070032553f},
    {0.6420866408292603f, 0.22157558054500281f, 0.37050620487340724f},
    {0.6809335111134621f, 0.5978638468417855f, 0.993226484646288f},
    {0.48145251134272726f, 0.6011432298722118f, 0.05748603837017452f},
    {0.810911967407374f, 0.677267399314088f, 0.3176554010331992f},
    {0.7625906631802071f, 0.9409709013848597f, 0.08060826615764505f},
    {0.5437069780278654f, 0.39844900563979213f, 0.08459505692295688f},
    {0.9275694714057285f, 0.21502460511863997f, 0.9379149894746323f},
    {0.03161719036350863f, 0.031362248141018956f, 0.6534113187645836f},
    {0.20296689216697006f, 0.39365341603353554f, 0.21730342718992957f},
    {0.3499727036310215f, 0.7272515668443497f, 0.6916059303607399f},
    {0.9565133854198614f, 0.741304645225927f, 0.1717693419185401f},
    {0.17732059058144245f, 0.33489504958583616f, 0.9881228364292974f},
    {0.4438504727326841f, 0.6380281171738071f, 0.3090865909991726f},
    {0.41759610126328495f, 0.7534560828757639f, 0.017645784085092542f},
    {0.6977218794641661f, 0.28655969845686946f, 0.021618702913028698f},
    {0.6954334930843157f, 0.9033369141469195f, 0.8902499483041999f},
    {0.46336393311340096f, 0.8578409880054986f, 0.08911222865502266f},
    {0.6010739698692792f, 0.6292719183418413f, 0.7676111634458175f},
    {0.5194242368301636f, 0.21763965025336474f, 0.9710185315732162f},
    {0.42682550746422154f, 0.19297794132887425f, 0.2618884425074528f},
    {0.9788484904993064f, 0.0558958944803809f, 0.06608893149712602f},
    {0.35394385412883267f, 0.0041656019280055245f, 0.09634306826650962f},
    {0.3781450623648144f, 0.6832268311319962f, 0.9761471973973989f},
    {0.2685475262491336f, 0.6244357350272303f, 0.8314549797535209f},
    {0.34851460694018155f, 0.7599018751072704f, 0.3733066630062376f},
    {0.7362580153636896f, 0.6845482307565613f, 0.8723271861875885f},
    {0.19576714252366467f, 0.1952745141515173f, 0.7907029709933406f},
    {0.11681944728029592f, 0.49781117275499287f, 0.965572850701625f},
    {0.6070684721823755f, 0.824365021614894f, 0.0058657849016998664f},
    {0.6894125838678993f, 0.23348098056681832f, 0.6796426688846928f},
    {0.5464229783937986f, 0.8642456861302963f, 0.037576565005902784f},
    {0.7359652841668556f, 0.44273094235133315f, 0.6098394781569075f},
    {0.9408969448121282f, 0.7749795453242967f, 0.8403275054776856f},
    {0.8274216423229735f, 0.16766952421764258f, 0.9547787227410057f},
    {0.8954335246270265f, 0.9155292568530818f, 0.687789106335496f},
    {0.795504781339655f, 0.4010153188758836f, 0.4767385555017384f},
    {0.43969142681059914f, 0.5401885896097436f, 0.3475731745672538f},
    {0.5932918380582454f, 0.9092668784300729f, 0.06842473399269522f},
    {0.6308192168608825f, 0.03724940150720657f, 0.4882390435684396f},
    {0.007585341170330273f, 0.01976899701074819f, 0.6146656877993364f},
    {0.11606409603630474f, 0.14599207706613038f, 0.6137144828770444f},
    {0.3482351901927143f, 0.11430338619806102f, 0.7724209963512187f},
    {0.5346622065055361f, 0.34791674844487164f, 0.6079271597989243f},
    {0.4303248201520472f, 0.019653876024597894f, 0.7215609373214348f},
    {0.9919145947051604f, 0.13939250561385197f, 0.4133704308892616f},
    {0.9778091548179724f, 0.17532108072915253f, 0.9990593111530472f},
    {0.9638233362602601f, 0.4721160872367921f, 0.7599422979476911f},
    {0.6377373141336827f, 0.8548673610939018f, 0.19707284546639425f},
    {0.6945826023215751f, 0.7353815870426507f, 0.552386377220121f},
    {0.7868054001589642f, 0.5067376424885334f, 0.6477039704857344f},
    {0.3744415308809793f, 0.9104286766140258f, 0.8769489175289921f},
    {0.5920399901946691f, 0.6898769943153165f, 0.9150145756466187f},
    {0.4452321478062674f, 0.6944112018267614f, 0.25222438989396123f},
    {0.6235691880242995f, 0.35046864676749734f, 0.5382154095923436f},
    {0.6656517112334116f, 0.17102075259489158f, 0.8522608309447753f},
    {0.8416841765328202f, 0.2441848650657461f, 0.5002560808578147f},
    {0.616257332821988f, 0.5689068428770402f, 0.49281729376100203f},
    {0.9378824664232216f, 0.39680219343702505f, 0.5206425102326098f},
    {0.5608799208924407f, 0.8658589103032474f, 0.5711644438634631f},
    {0.42285726616503927f, 0.68222636581881f, 0.3607901886991123f},
    {0.6326101810642621f, 0.4452212833353555f, 0.06096594076652817f},
    {0.1049651900619486f, 0.3275543408317554f, 0.5521254126391261f},
    {0.9856660816657297f, 0.6844187008997468f, 0.044211575449534135f},
    {0.546977795388987f, 0.8787384305778954f, 0.4660067196106743f},
    {0.3700851010635765f, 0.6079936069147963f, 0.9264198091485236f},
    {0.9644942298748302f, 0.29747417798268083f, 0.041401558777573566f},
    {0.4018616425793622f, 0.5220596131119524f, 0.3943073028028169f},
    {0.4711589141358036f, 0.013063549140083675f, 0.30389649926688855f},
    {0.4774936446668516f, 0.6386032402925969f, 0.1705620152022128f},
    {0.45421904352178155f, 0.32808888835769356f, 0.5388095585345886f},
    {0.729246182430594f, 0.0873454571271759f, 0.40589041280601423f},
    {0.4252466321246886f, 0.36770458237924764f, 0.7424040989432139f},
    {0.40199884802817065f, 0.3701526256510148f, 0.02300376135464144f},
    {0.2340819577493728f, 0.8994533411491065f, 0.6209138080988797f},
    {0.26989230588279367f, 0.984854747159767f, 0.7716021821330622f},
    {0.6561831256926517f, 0.12211333856828f, 0.40722114133702414f},
    {0.7112549814411218f, 0.6331806071318893f, 0.7510785366479767f},
    {0.5858754000091178f, 0.4127551106516265f, 0.1450763161866223f},
    {0.3820701267817638f, 0.871539293921545f, 0.6309936846406715f},
    {0.2713626552961955f, 0.05087088091122827f, 0.6019772082384333f},
    {0.7941020017319392f, 0.8611217331516022f, 0.39907048535636624f},
    {0.3684317206125103f, 0.9527730334788265f, 0.5995462678491196f},
    {0.5465587936922631f, 0.5090121641673963f, 0.6076896833243647f},
  };

  for (const auto& gr : {1,2,3,4,6,8,16,24,32} ) {
    test_votess(xyzset, k, gr);
  }

}

TEST_CASE("votess regression 11: collinear", "[votess]") {

  const int k = 25;
  std::vector<std::array<float, 3>> xyzset = {
    {0.01f, 0.5f, 0.5f},
    {0.017716535433070866f, 0.5f, 0.5f},
    {0.02543307086614173f, 0.5f, 0.5f},
    {0.0331496062992126f, 0.5f, 0.5f},
    {0.040866141732283465f, 0.5f, 0.5f},
    {0.04858267716535433f, 0.5f, 0.5f},
    {0.05629921259842519f, 0.5f, 0.5f},
    {0.06401574803149605f, 0.5f, 0.5f},
    {0.07173228346456692f, 0.5f, 0.5f},
    {0.07944881889763779f, 0.5f, 0.5f},
    {0.08716535433070866f, 0.5f, 0.5f},
    {0.09488188976377952f, 0.5f, 0.5f},
    {0.10259842519685038f, 0.5f, 0.5f},
    {0.11031496062992124f, 0.5f, 0.5f},
    {0.11803149606299211f, 0.5f, 0.5f},
    {0.12574803149606298f, 0.5f, 0.5f},
    {0.13346456692913386f, 0.5f, 0.5f},
    {0.1411811023622047f, 0.5f, 0.5f},
    {0.1488976377952756f, 0.5f, 0.5f},
    {0.15661417322834645f, 0.5f, 0.5f},
    {0.16433070866141733f, 0.5f, 0.5f},
    {0.17204724409448818f, 0.5f, 0.5f},
    {0.17976377952755906f, 0.5f, 0.5f},
    {0.18748031496062992f, 0.5f, 0.5f},
    {0.19519685039370077f, 0.5f, 0.5f},
    {0.20291338582677165f, 0.5f, 0.5f},
    {0.2106299212598425f, 0.5f, 0.5f},
    {0.2183464566929134f, 0.5f, 0.5f},
    {0.22606299212598424f, 0.5f, 0.5f},
    {0.23377952755905512f, 0.5f, 0.5f},
    {0.24149606299212598f, 0.5f, 0.5f},
    {0.24921259842519686f, 0.5f, 0.5f},
    {0.2569291338582677f, 0.5f, 0.5f},
    {0.2646456692913386f, 0.5f, 0.5f},
    {0.2723622047244094f, 0.5f, 0.5f},
    {0.2800787401574803f, 0.5f, 0.5f},
    {0.2877952755905512f, 0.5f, 0.5f},
    {0.29551181102362206f, 0.5f, 0.5f},
    {0.3032283464566929f, 0.5f, 0.5f},
    {0.31094488188976377f, 0.5f, 0.5f},
    {0.31866141732283465f, 0.5f, 0.5f},
    {0.3263779527559055f, 0.5f, 0.5f},
    {0.33409448818897636f, 0.5f, 0.5f},
    {0.34181102362204724f, 0.5f, 0.5f},
    {0.3495275590551181f, 0.5f, 0.5f},
    {0.35724409448818895f, 0.5f, 0.5f},
    {0.3649606299212598f, 0.5f, 0.5f},
    {0.3726771653543307f, 0.5f, 0.5f},
    {0.38039370078740153f, 0.5f, 0.5f},
    {0.3881102362204724f, 0.5f, 0.5f},
    {0.3958267716535433f, 0.5f, 0.5f},
    {0.4035433070866142f, 0.5f, 0.5f},
    {0.411259842519685f, 0.5f, 0.5f},
    {0.4189763779527559f, 0.5f, 0.5f},
    {0.42669291338582677f, 0.5f, 0.5f},
    {0.43440944881889765f, 0.5f, 0.5f},
    {0.4421259842519685f, 0.5f, 0.5f},
    {0.44984251968503935f, 0.5f, 0.5f},
    {0.45755905511811024f, 0.5f, 0.5f},
    {0.46527559055118106f, 0.5f, 0.5f},
    {0.47299212598425194f, 0.5f, 0.5f},
    {0.4807086614173228f, 0.5f, 0.5f},
    {0.4884251968503937f, 0.5f, 0.5f},
    {0.49614173228346453f, 0.5f, 0.5f},
    {0.5038582677165354f, 0.5f, 0.5f},
    {0.5115748031496062f, 0.5f, 0.5f},
    {0.5192913385826772f, 0.5f, 0.5f},
    {0.527007874015748f, 0.5f, 0.5f},
    {0.5347244094488188f, 0.5f, 0.5f},
    {0.5424409448818898f, 0.5f, 0.5f},
    {0.5501574803149606f, 0.5f, 0.5f},
    {0.5578740157480315f, 0.5f, 0.5f},
    {0.5655905511811024f, 0.5f, 0.5f},
    {0.5733070866141732f, 0.5f, 0.5f},
    {0.5810236220472441f, 0.5f, 0.5f},
    {0.5887401574803149f, 0.5f, 0.5f},
    {0.5964566929133858f, 0.5f, 0.5f},
    {0.6041732283464567f, 0.5f, 0.5f},
    {0.6118897637795275f, 0.5f, 0.5f},
    {0.6196062992125984f, 0.5f, 0.5f},
    {0.6273228346456693f, 0.5f, 0.5f},
    {0.6350393700787401f, 0.5f, 0.5f},
    {0.6427559055118109f, 0.5f, 0.5f},
    {0.6504724409448819f, 0.5f, 0.5f},
    {0.6581889763779527f, 0.5f, 0.5f},
    {0.6659055118110236f, 0.5f, 0.5f},
    {0.6736220472440945f, 0.5f, 0.5f},
    {0.6813385826771653f, 0.5f, 0.5f},
    {0.6890551181102362f, 0.5f, 0.5f},
    {0.6967716535433071f, 0.5f, 0.5f},
    {0.7044881889763779f, 0.5f, 0.5f},
    {0.7122047244094488f, 0.5f, 0.5f},
    {0.7199212598425196f, 0.5f, 0.5f},
    {0.7276377952755905f, 0.5f, 0.5f},
    {0.7353543307086614f, 0.5f, 0.5f},
    {0.7430708661417322f, 0.5f, 0.5f},
    {0.7507874015748031f, 0.5f, 0.5f},
    {0.758503937007874f, 0.5f, 0.5f},
    {0.7662204724409448f, 0.5f, 0.5f},
    {0.7739370078740158f, 0.5f, 0.5f},
    {0.7816535433070866f, 0.5f, 0.5f},
    {0.7893700787401574f, 0.5f, 0.5f},
    {0.7970866141732283f, 0.5f, 0.5f},
    {0.8048031496062992f, 0.5f, 0.5f},
    {0.81251968503937f, 0.5f, 0.5f},
    {0.8202362204724409f, 0.5f, 0.5f},
    {0.8279527559055118f, 0.5f, 0.5f},
    {0.8356692913385826f, 0.5f, 0.5f},
    {0.8433858267716535f, 0.5f, 0.5f},
    {0.8511023622047243f, 0.5f, 0.5f},
    {0.8588188976377953f, 0.5f, 0.5f},
    {0.8665354330708661f, 0.5f, 0.5f},
    {0.8742519685039369f, 0.5f, 0.5f},
    {0.8819685039370079f, 0.5f, 0.5f},
    {0.8896850393700787f, 0.5f, 0.5f},
    {0.8974015748031495f, 0.5f, 0.5f},
    {0.9051181102362205f, 0.5f, 0.5f},
    {0.9128346456692913f, 0.5f, 0.5f},
    {0.9205511811023621f, 0.5f, 0.5f},
    {0.928267716535433f, 0.5f, 0.5f},
    {0.9359842519685039f, 0.5f, 0.5f},
    {0.9437007874015747f, 0.5f, 0.5f},
    {0.9514173228346456f, 0.5f, 0.5f},
    {0.9591338582677165f, 0.5f, 0.5f},
    {0.9668503937007874f, 0.5f, 0.5f},
    {0.9745669291338582f, 0.5f, 0.5f},
    {0.982283464566929f, 0.5f, 0.5f},
    {0.99f, 0.5f, 0.5f},
  };

  for (const auto& gr : {1,2,3,4,6,8,16,24,32} ) {
    test_votess(xyzset, k, gr);
  }

}

TEST_CASE("votess regression 12: concentric", "[votess]") {

  const int k = 20;
  std::vector<std::array<float, 3>> xyzset = {
    {0.5472695757922609f, 0.4145240947256282f, 0.5214349439454906f},
    {0.5533040628064368f, 0.5227340730954749f, 0.4185025226843368f},
    {0.5569591464191816f, 0.43786842213149435f, 0.5538082026346174f},
    {0.5882163241709905f, 0.5440520695451443f, 0.5166521865996181f},
    {0.49522222900018137f, 0.403051099737717f, 0.524043370026001f},
    {0.5365300927758762f, 0.4296864310945366f, 0.4389954563203483f},
    {0.4397179738183209f, 0.5383331437923297f, 0.5699760488054872f},
    {0.4352196820206846f, 0.5025315945423982f, 0.42386130135357125f},
    {0.4639964499807131f, 0.5104302065331388f, 0.5927089811058496f},
    {0.40679137177422525f, 0.4718763926366749f, 0.4771698810090083f},
    {0.40517029804047683f, 0.4740675756081272f, 0.48170144837896167f},
    {0.5983669839064107f, 0.4824196486894027f, 0.49614413110286343f},
    {0.4653195987099324f, 0.4063289874983601f, 0.49520300268110323f},
    {0.5117984981872779f, 0.47997764842082324f, 0.5972620217647394f},
    {0.4795803970020921f, 0.40771458709986663f, 0.46734357062905174f},
    {0.5271660605760028f, 0.5947183878573806f, 0.5170420701348091f},
    {0.5708712724484694f, 0.4984844334649387f, 0.5705334374577947f},
    {0.5087618355315346f, 0.4138297420296023f, 0.5499791644531343f},
    {0.4885792982363849f, 0.5802574791773976f, 0.4414482740876398f},
    {0.41872907241151175f, 0.5188687613959386f, 0.5551271817916519f},
    {0.5999525226920881f, 0.5030733395659954f, 0.4997813875582367f},
    {0.48980270847858326f, 0.40076246707954444f, 0.4930770450320155f},
    {0.40097725131038964f, 0.5085100072409645f, 0.4889512435671246f},
    {0.5680119059223374f, 0.5596785248750709f, 0.5425776270069936f},
    {0.4602466136514458f, 0.42115310095915676f, 0.5469343667845393f},
    {0.469627129246235f, 0.5081624741774138f, 0.5949255641936256f},
    {0.5523179430368081f, 0.5093169034087126f, 0.41528855952546895f},
    {0.41606583485440435f, 0.46700013780229643f, 0.45680202532242453f},
    {0.5638935213851264f, 0.47289501618799334f, 0.4280073769226371f},
    {0.520894505543184f, 0.45965639639935413f, 0.4109168181606662f},
    {0.41768050342988183f, 0.5403470719235719f, 0.5399451407762749f},
    {0.5967371144425292f, 0.5104599175680679f, 0.5230764124985283f},
    {0.5086845934359732f, 0.5484033890398121f, 0.4129271008504228f},
    {0.409306904196668f, 0.5223176488704212f, 0.4642692720126747f},
    {0.47157011733669063f, 0.5552053693003373f, 0.4216156331137143f},
    {0.4752122414637119f, 0.4604669903550539f, 0.4115539250437914f},
    {0.4859861516594863f, 0.5116666466221468f, 0.5983234530073218f},
    {0.5641972572257723f, 0.5669051159463885f, 0.4625511331962055f},
    {0.5279200616460051f, 0.4149926521002899f, 0.4553432988148371f},
    {0.5341724697972561f, 0.42167136952780077f, 0.44806862262268327f},
    {0.5103647823536995f, 0.5900481086692884f, 0.5422363517819009f},
    {0.5985790159858024f, 0.5121878966099523f, 0.4884400353159696f},
    {0.44703313983759646f, 0.560996259617723f, 0.5589403769684561f},
    {0.4103694944920301f, 0.5278142909683831f, 0.5345360348087602f},
    {0.5384551577201755f, 0.4342295471326365f, 0.5647722809104199f},
    {0.48807387611031006f, 0.41692935004181986f, 0.4456213765851573f},
    {0.5556099316006312f, 0.5048853426394894f, 0.5829678789331625f},
    {0.40359749127237676f, 0.4744315300960778f, 0.5072670253744394f},
    {0.48243528371078437f, 0.44783157553019537f, 0.41651385605971697f},
    {0.4324629585745036f, 0.5121187277634569f, 0.5727453398705787f},
    {0.5308702028999062f, 0.521430124885173f, 0.5926702774373991f},
    {0.45571176579163336f, 0.4114476816435076f, 0.5140370660892967f},
    {0.44439052158253084f, 0.4423094735164892f, 0.5598279956558163f},
    {0.512869364241775f, 0.4020086832691342f, 0.5152342150885322f},
    {0.5578821530173836f, 0.5466318667552879f, 0.5668963778166596f},
    {0.4296589797467352f, 0.42898921315628397f, 0.5030998421840668f},
    {0.4185743291826357f, 0.5569266178722004f, 0.5113675111424926f},
    {0.4022987089205754f, 0.5151511356515854f, 0.48500330670178227f},
    {0.5665611667758119f, 0.49701630848763817f, 0.42542984067067036f},
    {0.49536031238415096f, 0.41135209166326914f, 0.4539563072033758f},
    {0.570969473312908f, 0.43101663579409266f, 0.5143048705175396f},
    {0.44239529512554343f, 0.42828433026039275f, 0.46077550905204323f},
    {0.5988717476440426f, 0.5117616842742435f, 0.5092757911169752f},
    {0.41402963808809823f, 0.5311335120791096f, 0.4595055399053578f},
    {0.5927054825846534f, 0.5366387630508831f, 0.49204421337341336f},
    {0.5295571296982275f, 0.5045868270432724f, 0.40457810994495413f},
    {0.48779926629931375f, 0.5317898744157183f, 0.5940241776448898f},
    {0.5149805242927128f, 0.4963473945093345f, 0.598804060468409f},
    {0.5961340415888453f, 0.5254369526305873f, 0.4894545038683129f},
    {0.5978927943324114f, 0.5198669553178767f, 0.49527719318734087f},
    {0.5582965731384634f, 0.5232740365214374f, 0.4221550978913161f},
    {0.5162303659328281f, 0.567554728685057f, 0.42807688929158555f},
    {0.44965354143381797f, 0.41568929208917627f, 0.5188928198376919f},
    {0.4122047929731538f, 0.4914612750123978f, 0.5471072372221013f},
    {0.5433213130718572f, 0.4453240278279154f, 0.5716505540855586f},
    {0.5587458563761685f, 0.5240180446982547f, 0.4227209091182924f},
    {0.4923292821675246f, 0.47136552153179095f, 0.40449488636314695f},
    {0.49026463203737275f, 0.4137004631743705f, 0.5495743134527757f},
    {0.5779660578547365f, 0.5461817429404033f, 0.5422911390432841f},
    {0.46294018436045953f, 0.5854334421819615f, 0.463562422944099f},
    {0.49305164188072015f, 0.5608180521952497f, 0.42092481522865643f},
    {0.4189336752022549f, 0.44247310992654076f, 0.48909550999529844f},
    {0.5302891842726918f, 0.4637167067658621f, 0.41187458965666895f},
    {0.4048796246555f, 0.47588408053503434f, 0.48075067214989764f},
    {0.5559586835788293f, 0.4721423075994494f, 0.42194505328782317f},
    {0.4266665845015933f, 0.5670698869834997f, 0.48887163842434006f},
    {0.48538787192246713f, 0.4112131733820829f, 0.5436278022843886f},
    {0.4381811420595413f, 0.5786009026480531f, 0.49942824319097356f},
    {0.4288879936761445f, 0.5368583385832536f, 0.5598710734284778f},
    {0.5236963957740303f, 0.43267562173805946f, 0.5700421938474494f},
    {0.5521776431603962f, 0.5472861297978745f, 0.42899636993107376f},
    {0.5598915832592992f, 0.46470404434566853f, 0.4281168046818876f},
    {0.5060406713048672f, 0.5941114099367247f, 0.5332648885449555f},
    {0.4988576036094544f, 0.5977036210976294f, 0.521276685712247f},
    {0.4740151357151572f, 0.4919206172743265f, 0.40377365016342776f},
    {0.46320116490642416f, 0.48379917793925076f, 0.4084392054408015f},
    {0.5482547507780133f, 0.44233695781535814f, 0.43407236851392256f},
    {0.593772009797049f, 0.47496415920781915f, 0.47591646092347084f},
    {0.4634793811646756f, 0.5477675233383218f, 0.4200968829518658f},
    {0.41212668419454584f, 0.452922907180471f, 0.5078757666938765f},
  };

  for (const auto& gr : {1,2,3,4,6,8,16,24,32} ) {
    test_votess(xyzset, k, gr);
  }

}

TEST_CASE("votess regression 13: noisy_data", "[votess]") {

  const int k = 5;
  std::vector<std::array<float, 3>> xyzset = {
    {0.3132399403069799f, 0.060574579116249125f, 0.06589670642829884f},
    {0.019054102666792083f, 1e-06f, 0.5169218295338242f},
    {0.08122991803596885f, 0.2610161068120613f, 0.9608773196232169f},
    {0.18063795134800598f, 0.43148087612930547f, 1e-06f},
    {0.012052590100750799f, 0.5395597122250916f, 0.5615794053308428f},
    {0.11384905073076287f, 0.6314699223053536f, 0.9772426782826525f},
    {0.17568927319076763f, 0.9857657656448557f, 0.05016737136481428f},
    {0.05603849438635139f, 0.9390517227727047f, 0.5588536624837085f},
    {0.2583062804541758f, 0.8511194098630064f, 0.8784539591818649f},
    {0.4515805695650796f, 0.12702083981994466f, 0.007181130827815102f},
    {0.6458646761147718f, 0.20874125872710536f, 0.4777127094577145f},
    {0.4147972714694337f, 0.2078740515233327f, 0.8270884699538246f},
    {0.4656615340841782f, 0.6895808443041483f, 0.01611154774603049f},
    {0.42863555014729937f, 0.4095045159227628f, 0.3388630566305062f},
    {0.3370725306412853f, 0.4244189726780536f, 0.9094273413461614f},
    {0.3353791791908435f, 0.879164255504245f, 0.18414348772377798f},
    {0.6074288065545206f, 0.7809403228955089f, 0.5528819202051338f},
    {0.4772628551650418f, 0.8410910695642789f, 0.9045156537714917f},
    {0.880390382461184f, 0.1285896270016415f, 1e-06f},
    {0.8007534023169236f, 0.04057236342329501f, 0.4958677519708763f},
    {0.7538725283248807f, 0.0655167239134527f, 0.7900082632920119f},
    {0.9853724179314892f, 0.4206587415690021f, 0.1255047804084022f},
    {0.999999f, 0.5709208362995313f, 0.5186432617778879f},
    {0.9638148366025839f, 0.3911354486890767f, 0.9910395801338131f},
    {0.9598572089264928f, 0.9507715626107885f, 0.2149030885983474f},
    {0.9556347102717213f, 0.8422150899079971f, 0.43098095937538106f},
    {0.7618472774620789f, 0.9157477204674421f, 0.884735674583918f},
  };

  for (const auto& gr : {1,2,3,4,6,8,16,24,32} ) {
    test_votess(xyzset, k, gr);
  }

}

TEST_CASE("votess regression 14: imbalanced_classes", "[votess]") {

  const int k = 22;
  std::vector<std::array<float, 3>> xyzset = {
    {0.2661079213647628f, 0.8602108230584576f, 0.44126962853303453f},
    {0.1986671500886803f, 0.7228280451389812f, 0.302028626963567f},
    {0.2802214056173562f, 0.033998351175109964f, 0.6773736086691442f},
    {0.3014739072997801f, 0.9194895758113433f, 0.2805761371917721f},
    {0.35070480795259185f, 0.9007768010509821f, 0.75499860900069f},
    {0.6678769070570258f, 0.779393149799095f, 0.029871408772178754f},
    {0.20108330765241889f, 0.48486040618026294f, 0.45334368752865406f},
    {0.6023817104296925f, 0.5778648352022622f, 0.02518064889248306f},
    {0.7099364274270383f, 0.7016536362261843f, 0.7730273931314584f},
    {0.19001091178768592f, 0.284269177426662f, 0.8378330853376694f},
    {0.45467016396631155f, 0.24508275125559975f, 0.17888675372283858f},
    {0.4551009280153976f, 0.355045264418518f, 0.7917694236691438f},
    {0.6473275806544567f, 0.21248415903901996f, 0.12840471084348692f},
    {0.699684053285694f, 0.5913114952089998f, 0.0566246717701131f},
    {0.6682853548959293f, 0.4881181407994952f, 0.6243148062539484f},
    {0.7197833160108102f, 0.8531225629301434f, 0.029739653779522035f},
    {0.2849938047216176f, 0.5739285667246723f, 0.7305736898741593f},
    {0.8914589560844486f, 0.1674291248437607f, 0.6421894643142585f},
    {0.4515677496963032f, 0.019107544218237016f, 0.317778540696664f},
    {0.27175359364087615f, 0.15748724984611195f, 0.02938024647126869f},
    {0.2799668760310753f, 0.9801264387643176f, 0.5398243278013167f},
    {0.18238499900344896f, 0.30515738685353677f, 0.7384853646106951f},
    {0.1255391507680378f, 0.8232703604904347f, 0.20436068783849837f},
    {0.4239734033509339f, 0.7575607006854602f, 0.2617540024118553f},
    {0.9224371423857965f, 0.4117453198319483f, 0.29636202605957307f},
    {0.148027725766396f, 0.9809844823448491f, 0.4511581145790511f},
    {0.11334341294306927f, 0.7183973259079371f, 0.7164132479384996f},
    {0.7998921656200919f, 0.9206967936819427f, 0.9761845950088653f},
    {0.8697525433956916f, 0.968392232534085f, 0.5850037807043104f},
    {0.09476074620032582f, 0.9885883539996174f, 0.9624572495315082f},
    {0.4207148042565595f, 0.08648560950553008f, 0.9617476310990477f},
    {0.20098806506945865f, 0.3106787828137858f, 0.5552053019094829f},
    {0.6013730813582409f, 0.12393682806956174f, 0.7377752399273292f},
    {0.18184577171630822f, 0.482310495247262f, 0.7334274277802602f},
    {0.6074043524275108f, 0.9217542031009772f, 0.13414973751996828f},
    {0.6115226763716796f, 0.30320681040639397f, 0.8319032031698161f},
    {0.4446164012022855f, 0.1405137661040251f, 0.9962383371239376f},
    {0.7913879921460593f, 0.4552741609625456f, 0.8587285275721962f},
    {0.2141090183244716f, 0.2992816354675132f, 0.7601863232237438f},
    {0.7144291192652368f, 0.06019272651080887f, 0.7862700873978977f},
    {0.19703594264397717f, 0.9622558648192832f, 0.9965031772597285f},
    {0.10881975047209391f, 0.8084925197964032f, 0.7637633436038682f},
    {0.3699997308729729f, 0.26200943321120884f, 0.09494821328177538f},
    {0.6398715161084759f, 0.7574086518977537f, 0.48715112277673545f},
    {0.3272528917954012f, 0.9309782916785806f, 0.47125454035492886f},
    {0.35804245196660134f, 0.7250832444855236f, 0.10959414696696501f},
    {0.8026286372084372f, 0.619818318076433f, 0.3563764057830199f},
    {0.693792431348222f, 0.0024295232889711693f, 0.139652125836509f},
    {0.34197713243832917f, 0.4415819376017762f, 0.2811575387997972f},
    {0.18393484013173234f, 0.6372568030513798f, 0.5960519685850564f},
    {0.40526487231229713f, 0.22700129177002204f, 0.6784358446315913f},
    {0.6293625852335278f, 0.5035107585549862f, 0.9998418539420975f},
    {0.7231292731852195f, 0.5348856094390974f, 0.945067820353758f},
    {0.05978930678794536f, 0.5866757758791453f, 0.07973343059081661f},
    {0.6329129286529371f, 0.20281905399202116f, 0.4527821632398915f},
    {0.4523443491756969f, 0.2461803469472319f, 0.9733748755063193f},
    {0.7715940681353998f, 0.11639417754709691f, 0.17500141240163014f},
    {0.5411163777334428f, 0.16884874983275888f, 0.3833448811192737f},
    {0.35226419591634595f, 0.3323918612259047f, 0.5182997657185809f},
    {0.35799519060222185f, 0.43209386911925185f, 0.08532906062074219f},
    {0.12893029396216693f, 0.40963278412554394f, 0.9384355374216619f},
    {0.11927510716426792f, 0.9691250404095595f, 0.2244867818552586f},
    {0.18521866941136622f, 0.6180827838948456f, 0.7576208806254324f},
    {0.10703838611155536f, 0.4409289517985997f, 0.37836040670925475f},
    {0.9019683605232036f, 0.5012296424907283f, 0.6816522810454706f},
    {0.47187531214500333f, 0.392416813654229f, 0.16930453983241633f},
    {0.41950341928619306f, 0.2968408142250707f, 0.9945504465379119f},
    {0.6610306454524842f, 0.9160388064266625f, 0.8616064158924532f},
    {0.3881622517178156f, 0.6912096305167662f, 0.6796417412434506f},
    {0.8500011748967526f, 0.31734432483883834f, 0.7132705413722819f},
    {0.46278060035068813f, 0.941326891237245f, 0.9556198284412649f},
    {0.9147531729427025f, 0.7036181937530842f, 0.04983921810777603f},
    {0.44513510187195515f, 0.05336512789256198f, 0.28186441743855006f},
    {0.48127535646799957f, 0.7351684235603407f, 0.11493194592125122f},
    {0.8570974957136349f, 0.3350303290785043f, 0.4574322314590924f},
    {0.3341554628181148f, 0.7157675449916793f, 0.7278367730223223f},
    {0.9611045025752455f, 0.9665947056617509f, 0.003630970437832559f},
    {0.5548167139589973f, 0.848890205086254f, 0.556329218099997f},
    {0.58085224129196f, 0.88054746363971f, 0.22260472505491236f},
    {0.1464835626478891f, 0.47329963867401403f, 0.22331926464727214f},
    {0.32544383582026026f, 0.2330038487510282f, 0.6153930349325686f},
    {0.16100368323612402f, 0.8866451621393046f, 0.9517298484769409f},
    {0.013786375029825715f, 0.6589701374479261f, 0.5631571270477552f},
    {0.2297714707646521f, 0.647593043809938f, 0.501499089929648f},
    {0.8633080127894639f, 0.3356869170054312f, 0.6718966747549096f},
    {0.5659520108525521f, 0.024275853408916692f, 0.1654183557007859f},
    {0.9402951335006974f, 0.4556596013143479f, 0.6276637179784164f},
    {0.08179736130197224f, 0.0793471804307867f, 0.8595233563736717f},
    {0.5538846027874434f, 0.4194271697945001f, 0.9136715308922205f},
    {0.9848082617655217f, 0.6327832967565606f, 0.3511911062172215f},
    {0.1550520102888383f, 0.6240410830397018f, 0.17060725151339518f},
    {0.7689200312736044f, 0.3365467047808457f, 0.6529341515498888f},
    {0.8581226313481329f, 0.46828378122866965f, 0.668087524517478f},
    {0.23256994104527917f, 0.7528535997819243f, 0.3014824790068893f},
    {0.07142763818416265f, 0.9048563354697945f, 0.188568763229217f},
    {0.8636773009001396f, 0.591906727048668f, 0.4855190125861343f},
    {0.015996602235609947f, 0.043101649476326664f, 0.7914969120055391f},
    {0.41234554325435535f, 0.618088807041042f, 0.37728671782230716f},
    {0.6586602909488851f, 0.94459463933705f, 0.9794032572642013f},
    {0.8802605356909802f, 0.6772718940026737f, 0.44672008973619104f},
    {0.9083690785218357f, 0.9345953008841259f, 0.9493940127349311f},
    {0.9792207345592578f, 0.9409755729147193f, 0.9876434220887825f},
    {0.9207772535694146f, 0.9667265068264166f, 0.9471571148887356f},
    {0.9611274512351196f, 0.9890455571741077f, 0.9145393662920228f},
    {0.9434074487542928f, 0.9176143936174547f, 0.9236916322783802f},
    {0.9712512663755437f, 0.9023675732124271f, 0.9165049393661663f},
    {0.9676539138005791f, 0.9455236527603593f, 0.9890353456619252f},
    {0.9663844608064306f, 0.9851780650430146f, 0.9432562450963343f},
    {0.9226188742007472f, 0.9180222785670638f, 0.9765878241214421f},
    {0.95620638305342f, 0.9029826595582024f, 0.9544061757061566f},
  };

  for (const auto& gr : {1,2,3,4,6,8,16,24,32} ) {
    test_votess(xyzset, k, gr);
  }

}

///////////////////////////////////////////////////////////////////////////////
/// Internal Functions                                                      ///
///////////////////////////////////////////////////////////////////////////////

#include <iostream>
class __internal__suppress_stdout {
  public:
    __internal__suppress_stdout() : buf(std::cout.rdbuf()) {
      std::cout.rdbuf(__tmp__buf.rdbuf());
    }
    ~__internal__suppress_stdout() {
      std::cout.rdbuf(buf);
    }
  private:
    std::streambuf* buf;
    std::stringstream __tmp__buf;
};

#include <voro++.hh>
template <typename T>
static std::pair<std::vector<std::array<T, 3>>, std::vector<std::vector<int>>>
run_voro(
  const std::vector<std::array<T,3>>& xyzset,
  const struct votess::vtargs vtargs
) {
  std::vector<std::array<T, 3>> coords;
  std::vector<std::vector<int>> neighbor_list;
  const double tolerance = 1e-8;

  using namespace voro;
  container con(
    0, 1, 0, 1, 0, 1,
    vtargs.xyzset.grid_resolution,
    vtargs.xyzset.grid_resolution,
    vtargs.xyzset.grid_resolution,
    false, false, false,
    xyzset.size()
  );
  
  for (size_t i = 0; i < xyzset.size(); i++) {
    con.put(i,xyzset[i][0],xyzset[i][1], xyzset[i][2]);
  }

  c_loop_all cl(con);
  voronoicell_neighbor c;
  if (cl.start()) do if (con.compute_cell(c, cl)) {
    std::vector<int> neighbors;
    std::vector<int> filtered_neighbors;
    std::vector<double> face_areas;
    double x, y, z;

    cl.pos(x, y, z);
    c.neighbors(neighbors);
    c.face_areas(face_areas);

    for (size_t i = 0; i < face_areas.size(); i++) {
      if (face_areas[i] >= tolerance) {
        filtered_neighbors.push_back(neighbors[i]);
      }
    }

    neighbor_list.push_back(filtered_neighbors);
    coords.push_back({
      static_cast<T>(x),
      static_cast<T>(y),
      static_cast<T>(z)
    });

  } while(cl.inc());

  return {coords, neighbor_list};
}

template <typename T>
static void run_test(
  std::vector<std::array<T,3>>& xyzset,
  struct votess::vtargs vtargs,
  const enum votess::device device
) {
    __internal__suppress_stdout s; // to preventstdout 

    (void)xyzset::sort<int,T>(xyzset, vtargs.xyzset);

    auto [vcoord, vneighbor] = run_voro<T>(xyzset, vtargs);
    auto dnn = votess::tesellate<int, T>(xyzset, vtargs, device);

    std::vector<int> test_dnn(0);
    std::vector<int> test_vneighbor(0);
    CAPTURE(vcoord, vneighbor);

    for (size_t i = 0; i < xyzset.size(); i++) {
        auto it = std::find_if(
            vcoord.begin(),
            vcoord.end(),
            [&](const std::array<T, 3>& elem) {
                return (elem[0] == xyzset[i][0]) &&
                       (elem[1] == xyzset[i][1]) &&
                       (elem[2] == xyzset[i][2]);
            });

        if (it == vcoord.end()) {
            CAPTURE(i);
            WARN("Matching coordinate not found in vcoord");
            continue;
        }

        const size_t index = std::distance(vcoord.begin(), it);
        CAPTURE(index);

        test_dnn.clear();
        test_vneighbor.clear();
        for (const auto& j : vneighbor[index]) {
            if (j < 0) continue;
            test_vneighbor.push_back(j);
        }
        for (size_t j = 0; j < dnn[i].size(); j++) {
            test_dnn.push_back(dnn[i][j]);
        }

        std::sort(test_vneighbor.begin(), test_vneighbor.end());
        std::sort(test_dnn.begin(), test_dnn.end());

        CAPTURE(test_vneighbor, test_dnn);

        bool cond = std::includes(
          test_dnn.begin(),
          test_dnn.end(),
          test_vneighbor.begin(),
          test_vneighbor.end()
        );
        CAPTURE(cond);
        REQUIRE(cond);
    }
}

template <typename T>
static void test_votess(
  std::vector<std::array<T,3>>& xyzset,
  const int k,
  const int gr
) {
  SECTION("(CPU) case : grid_resolution = " + std::to_string(gr)) {
    struct votess::vtargs vtargs(k,gr);
    run_test(xyzset, vtargs, votess::device::cpu);
  }
  SECTION("(GPU) case : grid_resolution = " + std::to_string(gr)) {
    struct votess::vtargs vtargs(k,gr);
    run_test(xyzset, vtargs, votess::device::gpu);
  }
}

///////////////////////////////////////////////////////////////////////////////
/// End                                                                     ///
///////////////////////////////////////////////////////////////////////////////